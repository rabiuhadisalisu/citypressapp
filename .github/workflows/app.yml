name: Build Flutter APK

on:
  push:
    branches:
      - main  # Specify the branch to trigger the build
  pull_request:
    branches:
      - main  # Specify the branch to trigger the build

jobs:
  build:
    runs-on: macos-latest  # Use macOS for building

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Check out the code from the repository

      - name: Install Flutter using Homebrew
        run: |
          brew update
          brew install --cask flutter  # Install Flutter
          brew install gradle  # Install Gradle as a backup if required

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'  # Use Zulu JDK
          java-version: '11'  # Match Java version in build.gradle

      
      - name: Cache Flutter and Pub dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Check Flutter version
        run: flutter --version  # Verify the installed Flutter version

      - name: Clean Flutter project
        run: flutter clean  # Clean the project to prevent build conflicts

      - name: Get Flutter dependencies
        run: flutter pub get  # Fetch all dependencies

      - name: Set up Gradle properties for caching
        run: |
          echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties
          echo "org.gradle.parallel=true" >> ~/.gradle/gradle.properties
          echo "android.useAndroidX=true" >> ./android/gradle.properties
          echo "android.enableJetifier=true" >> ./android/gradle.properties

      - name: Run Gradle wrapper to download dependencies
        run: ./gradlew --no-daemon buildEnvironment  # Prepare the Gradle environment

      - name: Build APK
        run: flutter build apk --release  # Build the release APK

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: flutter-apk
          path: build/app/outputs/flutter-apk/app-release.apk  # Path to the built APK
